name: Multicast Detection

on:
  schedule:
    - cron: '10 1,8 * * *'
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Create necessary directories
        run: |
          mkdir -p ${{ github.workspace }}/txt
          echo "Directories created"

      - name: Fetch multicast streams
        run: |
          cd $GITHUB_WORKSPACE
          python tools/multicast.py

      - name: Test multicast connectivity
        run: |
          cd $GITHUB_WORKSPACE
          bash tools/multicast.sh
          time=$(date +%Y/%m/%d)
          echo "节目频道 $time 更新,#genre#" > txt/zball.txt
          cat txt/湖南电信.txt txt/湖北电信.txt txt/广东电信.txt txt/北京联通.txt txt/四川电信.txt txt/浙江电信.txt txt/江苏电信.txt txt/上海电信.txt txt/福建电信.txt txt/安徽电信.txt txt/江西电信.txt txt/天津联通.txt txt/河南联通.txt txt/河南电信.txt txt/河北电信.txt txt/河北联通.txt txt/山东电信.txt txt/北京电信.txt txt/陕西电信.txt txt/广西电信.txt txt/贵州电信.txt txt/山西联通.txt txt/重庆电信.txt txt/海南电信.txt txt/吉林电信.txt txt/云南电信.txt txt/湖北联通.txt txt/山东联通.txt txt/重庆联通.txt txt/黑龙江联通.txt txt/辽宁联通.txt txt/甘肃电信.txt txt/新疆电信.txt txt/宁夏电信.txt >> txt/zball.txt

      - name: Check for IP file changes
        id: ip-changes
        run: |
          git add ip/
          if git diff --cached --quiet --exit-code; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push to source repository
        if: steps.ip-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Reset all unstaged changes
          git reset --hard
          # Fetch latest changes
          git fetch origin
          # Reset to remote branch
          git reset --hard origin/main
          # Add files to commit
          git add ip/
          git commit -m "Update IP files"
          git push origin main

      - name: Checkout target repository
        uses: actions/checkout@v3
        with:
          repository: jk1818/zb
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          path: target-repo
          ref: main

      - name: Copy TXT files to target repository
        run: |
          mkdir -p target-repo/lv
          cp -r $GITHUB_WORKSPACE/txt/* target-repo/lv/

      - name: Commit and push to target repository
        run: |
          cd target-repo
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Reset all changes
          git reset --hard
          # Fetch latest changes
          git fetch origin
          # Reset to remote branch
          git reset --hard origin/main
          # Copy and add files
          cp -r $GITHUB_WORKSPACE/txt/* lv/
          git add lv/
          git commit -m "Update multicast source files"
          git push origin main